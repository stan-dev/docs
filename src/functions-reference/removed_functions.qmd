---
pagetitle: Removed Functions
---

# Removed Functions



Functions which once existed in the Stan language and have since been replaced
or removed are listed here.


## `multiply_log` and `binomial_coefficient_log` functions

*Removed*: Currently two non-conforming functions ending in suffix
  `_log`.

*Replacement*: Replace `multiply_log(...)` with `lmultiply(...)`.
 Replace `binomial_coefficient_log(...)` with `lchoose(...)`.

*Removed In*: Stan 2.33


## `get_lp()` function

*Removed*: The built-in no-argument function `get_lp()` is deprecated.

*Replacement*: Use the no-argument function `target()` instead.

*Removed In*: Stan 2.33

## `fabs` function

*Removed*: The unary function `fabs` is deprecated.

*Replacement*: Use the unary function `abs` instead. Note that the return type
for `abs` is different for integer overloads, but this replacement is safe due
to Stan's type promotion rules.

*Removed In*: Stan 2.33


## Exponentiated quadratic covariance functions {#cov_exp_quad}

These covariance functions have been replaced by those described in [Gaussian Process Covariance Functions](matrix_operations.qmd#gaussian-process-covariance-functions)

With magnitude $\alpha$ and length scale $l$, the exponentiated quadratic kernel is:

$$
k(x_i, x_j) = \alpha^2 \exp \left(-\dfrac{1}{2\rho^2} \sum_{d=1}^D (x_{i,d} - x_{j,d})^2 \right)
$$

<!-- matrix; cov_exp_quad; (row_vectors x, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (row\_vectors x, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(row_vectors x, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x.
{{< since "2.16, deprecated since 2.20, removed in in 2.33" >}}

<!-- matrix; cov_exp_quad; (vectors x, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (vectors x, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(vectors x, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x.
{{< since "2.16, deprecated since 2.20, removed in in 2.33" >}}

<!-- matrix; cov_exp_quad; (array[] real x, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (array[] real x, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(array[] real x, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x.
{{< since "2.16, deprecated since 2.20, removed in in 2.33" >}}

<!-- matrix; cov_exp_quad; (row_vectors x1, row_vectors x2, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (row\_vectors x1, row\_vectors x2, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(row_vectors x1, row_vectors x2, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x1 and
x2.
{{< since "2.18, deprecated since 2.20, removed in in 2.33" >}}

<!-- matrix; cov_exp_quad; (vectors x1, vectors x2, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (vectors x1, vectors x2, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(vectors x1, vectors x2, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x1 and
x2.
{{< since "2.18, deprecated since 2.20, removed in in 2.33" >}}

<!-- matrix; cov_exp_quad; (array[] real x1, array[] real x2, real alpha, real rho); -->
\index{{\tt \bfseries cov\_exp\_quad }!{\tt (array[] real x1, array[] real x2, real alpha, real rho): matrix}|hyperpage}

`matrix` **`cov_exp_quad`**`(array[] real x1, array[] real x2, real alpha, real rho)`<br>\newline
The covariance matrix with an exponentiated quadratic kernel of x1 and
x2.
{{< since "2.18, deprecated since 2.20, removed in in 2.33" >}}


## Real arguments to logical operators `operator&&`, `operator||`, and `operator!`

*Removed*: A nonzero real number (even NaN) was interpreted as true and
a zero was interpreted as false.

*Replacement*: Explicit `x != 0` comparison is preferred instead.

*Removed In*: Stan 2.34
